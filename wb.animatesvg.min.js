/*
 * jQuery Animate SVG Plugin for WYSIWYG Web Builder 15
 * Copyright Pablo Software solutions 2019
 * https://www.wysiwygwebbuilder.tk/
 */

(function($)
{
   $.fn.animatesvg = function(options) 
   {
      return this.each(function() 
      {   
         $.animatesvg(this, options);
      });
   };

   $.animatesvg = function(obj, options) 
   {
      var data = 
      {
         delay: 250, 
         duration: 1000, 
         easing: 'linear', 
         loop: false,
         reverse: false,
         useClipPath: true
      };

      var $obj = $(obj);

      if (options && typeof(options) == 'string') 
      { 
         if (options == 'animate') 
         { 
            animate();
            return;
         } 
      }

      if (options)
         data = $.extend(data, options);

      data.$paths = $obj.find('path'); 
 
      data.total = data.duration + (data.delay * data.$paths.length); 
      data.duration = data.duration / data.total; 

      $obj.data('animatesvg', data);

      data.$paths.each(function(index, el) 
      { 
         var pathLength = el.getTotalLength(); 
 
         el.delay = (data.delay * index) / data.total; 
         el.pathLen = pathLength; 
    
         var elem = el;
         if (data.useClipPath)
         {
             var filter = "[data-href='#" + el.id + "']";
             var $el = $obj.find(filter); 
             elem = $el[0]; 
         }
         elem.style.strokeDasharray = [pathLength, pathLength].join(' '); 
         elem.style.strokeDashoffset = pathLength; 
      }); 

      $obj.css('opacity', '1.0');
 
      function animationStep(value) 
      { 
         var data = $obj.data('animatesvg');
 
         data.$paths.each(function(index, el) 
         { 
             var elem = el;
             if (data.useClipPath)
             {
                var filter = "[data-href='#" + el.id + "']";
                var $el = $obj.find(filter); 
                elem = $el[0]; 
             }
             if (value === 0) 
             { 
                elem.style.strokeDashoffset = el.pathLen + 'px'; 
             } 
             else 
             if (value === 1) 
             { 
                elem.style.strokeDashoffset = 0; 
             } 
             else 
             if (value >= el.delay && value <= data.duration + el.delay) 
             { 
                var p = ((value - el.delay) / data.duration); 
                var easingVal = 1 - $.easing[data.easing](p, p, 0, 1, 1); 

                elem.style.strokeDashoffset = ((easingVal * el.pathLen) * (data.reverse ? -1 : 1)) + 'px'; 
             } 
         }); 
       } 
 
       function animate() 
       { 
          var data = $obj.data('animatesvg');
     
          $({ step: 0 }).animate({ step: 1 }, 
          { 
             easing: 'linear', 
             duration: data.total, 
             step: function(now, fx) 
             { 
                animationStep.call(this, now / fx.end); 
             },
             complete: function() 
             { 
                if (data.loop)
                {
                   setTimeout(function()
                   { 
                      $obj.fadeTo(1000, 0, function()
                      {
                         data.$paths.each(function(index, el) 
                         { 
                             var pathLength = el.getTotalLength(); 
 
                             el.delay = (data.delay * index) / data.total; 
                             el.pathLen = pathLength; 

                             var elem = el;

                             if (data.useClipPath)
                             {
                                var filter = "[data-href='#" + el.id + "']";
                                var $el = $obj.find(filter); 
                                elem = $el[0]; 
                             }
                             elem.style.strokeDasharray = [pathLength, pathLength].join(' '); 
                             elem.style.strokeDashoffset = pathLength; 
                         }); 
                         $obj.css('opacity', '1.0');
                         animate();
                      });
                   }, data.duration+1000);
                }
             }
          }); 
      }
   };
})(jQuery);